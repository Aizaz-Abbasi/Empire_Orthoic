name: Manual iOS Build & Upload to TestFlight

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: "Select build type"
        required: true
        default: "Release"
        type: choice
        options:
          - Release
          - Development

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select preferred Xcode version
        run: |
          XCODE_PATH=$(ls -d /Applications/Xcode_16*.app | sort -V | tail -1)
          echo "Using Xcode: $XCODE_PATH"
          sudo xcode-select -switch "$XCODE_PATH/Contents/Developer"
          xcodebuild -version

      - name: Set up Ruby (for CocoaPods)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: Install CocoaPods
        run: |
          gem install cocoapods
          pod install --repo-update

      - name: Resolve Swift Package Dependencies
        run: |
          xcodebuild -resolvePackageDependencies \
            -workspace EmpireScan.xcworkspace \
            -scheme EmpireScan

      - name: Set build number from GitHub run number
        run: |
          BASE_BUILD_NUMBER=1000
          NEW_BUILD=$((BASE_BUILD_NUMBER + GITHUB_RUN_NUMBER))
          echo "BUILD_NUMBER=$NEW_BUILD" >> $GITHUB_ENV
          echo "📈 Build number: $NEW_BUILD"

      - name: Verify required secrets
        run: |
          if [[ -z "${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}" ]] || \
             [[ -z "${{ secrets.APP_STORE_CONNECT_KEY_ID }}" ]] || \
             [[ -z "${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}" ]]; then
            echo "❌ Missing required App Store Connect secrets"
            exit 1
          fi
          echo "✅ All required secrets are present"

      - name: Build archive
        run: |
          xcodebuild -workspace EmpireScan.xcworkspace \
            -scheme EmpireScan \
            -configuration ${{ github.event.inputs.build_type }} \
            -archivePath build/EmpireScan.xcarchive \
            clean archive \
            CURRENT_PROJECT_VERSION=$BUILD_NUMBER \
            MARKETING_VERSION="1.0.$BUILD_NUMBER" \
            CODE_SIGN_STYLE=Automatic

      - name: Generate ExportOptions.plist
        run: |
          cat > ExportOptions.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store</string>
            <key>signingStyle</key>
            <string>automatic</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>uploadSymbols</key>
            <true/>
            <key>destination</key>
            <string>upload</string>
          </dict>
          </plist>
          EOF

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath build/EmpireScan.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build/Exported

      - name: Create App Store Connect API Key
        env:
          APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.appstoreconnect/private_keys
          echo "${APP_STORE_CONNECT_PRIVATE_KEY}" > ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_ID }}.p8

      - name: Upload to TestFlight using App Store Connect API
        env:
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
        run: |
          xcrun notarytool submit build/Exported/EmpireScan.ipa \
            --key ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_ID }}.p8 \
            --key-id $APP_STORE_CONNECT_KEY_ID \
            --issuer $APP_STORE_CONNECT_ISSUER_ID \
            --wait

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: exported-ipa-${{ env.BUILD_NUMBER }}
          path: build/Exported/*.ipa

      - name: Clean up sensitive files
        if: always()
        run: |
          rm -rf ~/.appstoreconnect/private_keys/
          rm -f AuthKey*.p8
